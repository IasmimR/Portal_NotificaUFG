define.experiment.component("wysiwyg.common.components.basicmenu.viewer.BasicMenu.VerticalMenu",function(a,b){var c=a;c.methods({_handleSkinChange:function(){if(!this._skinParts.menuItem)throw new Error("Skin did not supply menuItem skinpart");this._skinParts.menuItem=this._skinParts.menuItem.cloneNode(!0),this._skinParts.subMenuItem&&(this._skinParts.subMenuItem=this._skinParts.subMenuItem.cloneNode(!0)),this._menuContainer=this._skinParts.menuContainer,this.buildItemList(),this._renderLinks(this._menuContainer.getChildren(),this._menuDataNP.get("items")),this._handleAspectRatioLimit&&this._handleAspectRatioLimit()}})}),define.experiment.Class("wysiwyg.common.components.basicmenu.viewer.traits.BasicMenuDataHandler.VerticalMenu",function(a){var b=a;b.methods({_handleFirstDataChange:function(){var a=this.getDataItem(),b=a.get("id");if("#"!==b[0]&&(b="#"+b),"#MAIN_MENU"===b)this._menuDataNP=this._createMenuNonPersistentData(a),this._migrateData(a);else{var c=a.get("menuRef");"#MAIN_MENU"===c?(this._mainMenuData=this.resources.W.Data.getDataByQuery(c),this._menuDataNP=this._createMenuNonPersistentData(this._mainMenuData)):this._menuDataNP=this.resources.W.Data.getDataByQuery(c)}}})}),define.experiment.Class("wysiwyg.common.components.basicmenu.viewer.traits.MenuDomBuilder.VerticalMenu",function(a){var b=a;b.methods({_buildMenuDomAccordingToData:function(a,b){for(var c,d,e=0;e<a.length;e++){var f=a[e];this.isItemVisible(f)&&(c=this._buildItem(f,b),d=this.getListElement(c),this._containsVisibleItem(f.get("items"))?this._buildMenuDomAccordingToData(f.get("items"),d):this._markEmptySubMenu(d))}},_containsVisibleItem:function(a){return _.any(a,this.isItemVisible,this)},_setMenuMinHeight:function(){var a=this._menuContainer.getFirst();if(a){var b=this.getLabelElement(a);if(b){var c=b.getHeight();this.setMinH(c)}}}})}),define.experiment.Class("core.managers.componentlifecyclemanager.ComponentMeasurer.VerticalMenu",function(a){var b=a;b.methods({_measureComponent:function(a){var b=a.component;if(b._skinParts){a.state!=a.STATES.MEASURED&&(b._invalidations_.clearInvalidationType(b.INVALIDATIONS.SIZE),b._invalidations_.clearInvalidationType(b.INVALIDATIONS.POSITION));for(var c in b._skinParts){var d=this._getNodeForMeasure(b._skinParts[c]);if(d&&d.parentNode){var e=this._getOldMeasure(d),f=this._getNewMeasure(d);d.$measure=f,this._invalidateSizeIfChanged(b,c,d,f,e),this._invalidatePositionIfChanged(b,c,d,f,e)}}b.isInvalidated([b.INVALIDATIONS.SIZE])&&b.reportLayoutChange()}b.trigger(Constants.LifecycleSteps.MEASURE)}})});